@using Student_Supervison_App_Library;
@using Student_Supervisor_Data_Access.DataManager;
@using Student_Supervisor_Logic.Models;
@page "/"
@inject IDataManager dataManager
@inject NavigationManager navManager

<h2>Log In Page</h2>

<h2>@filePath</h2>
<form>
    <div>
        <label class="label-text">Enter Student Number or Staff Number</label>
        <input type="text" class="form-control" @bind="loginDetails" />
    </div>
</form>
<div>
    <button @onclick="() => LogUserIn(loginDetails)" class="btn btn-app btn-outline-light btn-lg text-uppercase">
        Confirm
    </button>
</div>


@if(isValid == false)
{
    <div class="loginFailedMessageBox">
        <span>User Details Not Valid. Please Try Again</span>
    </div>
}




@code
{
    private string? loginDetails;
    private List<SeniorTutorModel>? seniorTutors;

    private StudentModel? student;
    private PersonalSupervisorModel? personalSupervisor;
    private SeniorTutorModel? seniorTutor;
    private bool isValid;

    private string? filePath;


    protected override void OnInitialized()
    {
        filePath = FilePathConstants.ConstructPath();
        seniorTutors = dataManager.DeserializeSeniorTutorModelFromFile(filePath!);
        dataManager.CurrentData = seniorTutors;
        isValid = true;


    }


    private void LogUserIn(string userNumber)
    {
        if(userNumber is not null)
        {
            if (userNumber.ToUpper().Contains("ST"))
            {
                student = dataManager.GetStudentAndAssignPersonalSupervisor(userNumber.ToUpper(), seniorTutors!);
                if (student != null)
                {
                    OpenStudentDetails(student.StudentNumber);
                }
                else
                {
                    isValid = false;
                }
            }
            else if (userNumber.ToUpper().Contains("PS"))
            {
                personalSupervisor = dataManager.GetPersonalSupervisor(userNumber.ToUpper(), seniorTutors!);
                if (personalSupervisor != null)
                {
                    OpenDetails(personalSupervisor.StaffNumber);
                }
                else
                {
                    isValid = false;
                }
            }
            else if (userNumber.ToUpper().Contains("SN"))
            {
                seniorTutor = dataManager.GetSeniorTutor(userNumber.ToUpper(), seniorTutors!);
                if (seniorTutor != null)
                {
                    OpenTutorDetails(seniorTutor.StaffNumber);
                }
                else
                {
                    isValid = false;
                }

            }
        }
      
        else if(userNumber == null)
        {
            isValid = false;
        }

    }

    private void OpenDetails(string StaffNumber)
    {
        navManager.NavigateTo($"/SupervisorHomePage/{StaffNumber}");
    }

    private void OpenStudentDetails(string StudentNumber)
    {
        navManager.NavigateTo($"/StudentHomePage/{StudentNumber}");
    }

    private void OpenTutorDetails(string StaffNumber)
    {
        navManager.NavigateTo($"/SeniorTutorHomePage/{StaffNumber}");
    }


}