@using Student_Supervisor_Data_Access.DataManager;
@using Student_Supervisor_Logic.Factory;
@using Student_Supervisor_Logic.Models;
@inject IDataManager dataManager
@inject NavigationManager navManager


@page "/StudentHomePage/{StudentNumber}"


<div class="welcome-header">
    <div>
        <h3 class="pageTitle">Welcome @student!.FirstName</h3>
    </div>
    <div class="welcome-header-scores">
        <div>
            <span>Student Id: @student.StudentNumber</span>
        </div>
        <div>
            <span>Wellbeing Score: @student.WellbeingScore</span>
        </div>
    </div>
</div>

<div class="student-homepage-button-container">

    <div class="ButtonBox">
        <button @onclick="() => OpenAddNewStatus(student.StudentNumber)" class="btn btn-outline-light btn-lg text-uppercase">Add New Status</button>
    </div>
    <div class="ButtonBox">
        <button @onclick="() => OpenBookAppointment(student.StudentNumber)" class="btn btn-outline-light btn-lg text-uppercase">Book Appointment</button>
    </div>
</div>

<div class="app-display-container">

    <h4 class="status-header-text">Recent Statuses</h4>

    @if (student.Statuses.Count > 0)
    {

        for(int i = student.Statuses.Count -1; i >= 0; i--)
        {  
            <div class="studentBox">
                <div class="studentBoxInfo">
                    <h6>Status Id: @student.Statuses[i].StatusId</h6>
                    <h6>Upload Date: @student.Statuses[i].StatusDate</h6>
                    <h6>Comments: @student.Statuses[i].StatusComments</h6>
                    <h6>Score: @student.Statuses[i].StatusScore</h6>
                </div>
            </div>
        }

    }
    else
    {
        <div class="studentBox">
            <h6>You Do Not Have Any Statuses</h6>
            <div class="ButtonBox">
                <button class="btn btn-outline-light btn-lg text-uppercase">Add New Status</button>
            </div>
        </div>
    }



</div>




@code {
    [Parameter]
    public string? StudentNumber { get; set; }

    private List<SeniorTutorModel>? seniorTutors;
    private PersonalSupervisorModel? supervisor;
    private StudentModel? student;


    protected override void OnInitialized()
    {
        seniorTutors = dataManager.DeserializeSeniorTutorModelFromFile("C:\\Users\\ssmal\\source\\repos\\Student Supervison App\\Student Supervison App Library\\XmlFiles\\Database.xml");
        student = dataManager.GetStudentAndAssignPersonalSupervisor(StudentNumber!,seniorTutors);

    }

    public void OpenAddNewStatus(string StudentNumber)
    {
        navManager.NavigateTo($"/AddStatusPage/{StudentNumber}");
    }

    public void OpenBookAppointment(string StudentNumber)
    {
        navManager.NavigateTo($"/StudentBookAppointment/{StudentNumber}");
    }






}
